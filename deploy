#!/usr/bin/env bash

set -e

# =================================================================================================

_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

if [ -z ${ECR_DOMAIN+x} ]; then
    ECR_DOMAIN=707906211298.dkr.ecr.us-east-2.amazonaws.com
fi

_MEDIATOR_IMAGE_BASE=indicio-tech/aries-mediator-base
_MEDIATOR_IMAGE_BASE_FQ=$ECR_DOMAIN/$_MEDIATOR_IMAGE_BASE

_MEDIATOR_IMAGE=indicio-tech/aries-mediator
_MEDIATOR_IMAGE_FQ=$ECR_DOMAIN/$_MEDIATOR_IMAGE


# =================================================================================================


require_env() {
    if [ -z ${IMAGE_VER+x} ]; then
        echo "The IMAGE_VER environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${IMAGE_VER_BASE+x} ]; then
        echo "The IMAGE_VER_BASE environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${DEPLOYMENT_ENV+x} ]; then
        echo "The DEPLOYMENT_ENV environment variable is not set."
        echo
        exit 1
    fi
}


require_env_full() {
    require_env

    if [ -z ${HTTP_PORT+x} ]; then
        echo "The HTTP_PORT environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${WS_PORT+x} ]; then
        echo "The WS_PORT environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${HTTP_ENDPOINT+x} ]; then
        echo "The HTTP_ENDPOINT environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${WS_ENDPOINT+x} ]; then
        echo "The WS_ENDPOINT environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${AGENT_NAME+x} ]; then
        echo "The AGENT_NAME environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${WALLET_NAME+x} ]; then
        echo "The WALLET_NAME environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${RDBMS_URL+x} ]; then
        echo "The RDBMS_URL environment variable is not set."
        echo
        exit 1
    fi

    if [ -z ${RDBMS_AUTH+x} ]; then
        echo "The RDBMS_AUTH environment variable is not set."
        echo
        exit 1
    fi
}


mediator_build() {
    require_env

    pushd $_DIR/mediator/app

    if [[ $1 == BASE ]]; then
        docker build -f Dockerfile.base --no-cache -t $_MEDIATOR_IMAGE_BASE .
        docker tag $_MEDIATOR_IMAGE_BASE:latest $_MEDIATOR_IMAGE_BASE_FQ:latest
        docker tag $_MEDIATOR_IMAGE_BASE:latest $_MEDIATOR_IMAGE_BASE_FQ:$IMAGE_VER_BASE
    else
        docker build --no-cache --build-arg IMAGE_VER_BASE=$IMAGE_VER_BASE -t $_MEDIATOR_IMAGE .
        docker tag $_MEDIATOR_IMAGE:latest $_MEDIATOR_IMAGE_FQ:latest
        docker tag $_MEDIATOR_IMAGE:latest $_MEDIATOR_IMAGE_FQ:$IMAGE_VER-$DEPLOYMENT_ENV
    fi
}


mediator_push() {
    require_env

    if [[ $1 == BASE ]]; then
        declare -a TARGETS=($_MEDIATOR_IMAGE_BASE_FQ:$IMAGE_VER_BASE $_MEDIATOR_IMAGE_BASE_FQ:latest)
    else
        declare -a TARGETS=($_MEDIATOR_IMAGE_FQ:$IMAGE_VER-$DEPLOYMENT_ENV $_MEDIATOR_IMAGE_FQ:latest)
    fi

    for TARGET in ${TARGETS[@]}; do
        echo "Pushing $TARGET"
        docker push $TARGET
    done
}


# =================================================================================================


display_usage() {
    echo "Deployment helper for Indicio Infrastructure"
    echo
    echo "Usage:"
    echo
    echo "  deploy COMMAND mediator [--base]"
    echo
    echo "Commands:"
    echo
    echo "  build"
    echo "  push"
    echo
}

if [[ $# -lt 2 ]]; then
    display_usage
    exit 1
fi

if [[ "$2" != "mediator" ]]; then
    display_usage
    exit 1
fi

if [[ "$1" == "build" ]]; then
    if [[ "$3" == "--base" ]]; then
        mediator_build BASE
    else
        mediator_build
    fi

    exit 0
fi

if [[ "$1" == "push" ]]; then
    if [[ "$3" == "--base" ]]; then
        mediator_push BASE
    else
        mediator_push
    fi

    exit 0
fi

display_usage
exit 1
